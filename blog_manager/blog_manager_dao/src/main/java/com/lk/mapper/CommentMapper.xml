<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lk.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.lk.pojo.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_pid" jdbcType="INTEGER" property="commentPid" />
    <result column="comment_pname" jdbcType="VARCHAR" property="commentPname" />
    <result column="comment_article_id" jdbcType="INTEGER" property="commentArticleId" />
    <result column="comment_author_name" jdbcType="VARCHAR" property="commentAuthorName" />
    <result column="comment_author_email" jdbcType="VARCHAR" property="commentAuthorEmail" />
    <result column="comment_author_url" jdbcType="VARCHAR" property="commentAuthorUrl" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_agent" jdbcType="VARCHAR" property="commentAgent" />
    <result column="comment_ip" jdbcType="VARCHAR" property="commentIp" />
    <result column="comment_create_time" jdbcType="TIMESTAMP" property="commentCreateTime" />
    <result column="comment_role" jdbcType="INTEGER" property="commentRole" />
    <result column="comment_status" jdbcType="INTEGER" property="commentStatus" />
  </resultMap>


  <resultMap id="CommentCustomResult" type="com.lk.pojo.custom.CommentCustom">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_pid" jdbcType="INTEGER" property="commentPid" />
    <result column="comment_pname" jdbcType="VARCHAR" property="commentPname" />
    <result column="comment_article_id" jdbcType="INTEGER" property="commentArticleId" />
    <result column="comment_author_name" jdbcType="VARCHAR" property="commentAuthorName" />
    <result column="comment_author_email" jdbcType="VARCHAR" property="commentAuthorEmail" />
    <result column="comment_author_url" jdbcType="VARCHAR" property="commentAuthorUrl" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_agent" jdbcType="VARCHAR" property="commentAgent" />
    <result column="comment_ip" jdbcType="VARCHAR" property="commentIp" />
    <result column="comment_create_time" jdbcType="TIMESTAMP" property="commentCreateTime" />
    <result column="comment_role" jdbcType="INTEGER" property="commentRole" />
    <result column="comment_status" jdbcType="INTEGER" property="commentStatus" />
    <association property="article" column="comment_article_id" javaType="com.lk.pojo.Article">
      <id column="comment_article_id" property="articleId" jdbcType="INTEGER"></id>
      <result column="article_title" property="articleTitle" jdbcType="VARCHAR"></result>
    </association>
    <association property="user" column="article_user_id" javaType="com.lk.pojo.User">
      <id column="article_user_id" property="userId" jdbcType="INTEGER"></id>
      <result column="user_name" property="userName" jdbcType="VARCHAR"></result>
      <result column="user_pass" property="userPass" jdbcType="VARCHAR"></result>
      <result column="user_nickname" property="userNickname" jdbcType="VARCHAR"></result>
      <result column="user_email" property="userEmail" jdbcType="VARCHAR"></result>
      <result column="user_url" property="userUrl" jdbcType="VARCHAR"></result>
      <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR"></result>
      <result column="user_last_login_ip" property="userLastLoginIp" jdbcType="VARCHAR"></result>
      <result column="user_register_time" property="userRegisterTime" jdbcType="TIMESTAMP"></result>
      <result column="user_last_login_time" property="userLastLoginTime" jdbcType="TIMESTAMP"></result>
      <result column="user_status" property="userStatus" jdbcType="INTEGER"></result>
    </association>
  </resultMap>

  <sql id="User_Base_Column">
        user_id,user_name,user_pass,user_nickname,user_email,user_url,user_avatar,user_last_login_ip,user_register_time,user_last_login_time,user_status
    </sql>
  <sql id="Article_Base_Column">
        article_id,article_user_id,article_title,article_content,article_parent_category_id,article_child_category_id,article_tag_ids,article_view_count,article_comment_count,article_like_count,article_post_time,article_update_time,article_is_comment,article_status,article_order
    </sql>


  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    comment_id, comment_pid, comment_pname, comment_article_id, comment_author_name, 
    comment_author_email, comment_author_url, comment_content, comment_agent, comment_ip, 
    comment_create_time, comment_role, comment_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <select id="selectCommentsList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment
  </select>

  <select id="selectCommentCustomList" parameterType="int" resultMap="CommentCustomResult">
    select
    <include refid="Base_Column_List"></include>
    ,<include refid="User_Base_Column"></include>,
    <include refid="Article_Base_Column"></include>
    from comment c,article a,user u
    where c.comment_article_id=a.article_id and u.user_id=a.article_user_id and c.comment_status=#{status}
  </select>


  <select id="selectRentCommentCustomer" resultMap="CommentCustomResult">
    select
    <include refid="Base_Column_List"></include>
    ,<include refid="User_Base_Column"></include>,
    <include refid="Article_Base_Column"></include>
    from comment c,article a,user u
    where c.comment_article_id=a.article_id and u.user_id=a.article_user_id and c.comment_status=1
    order by comment_id desc
    limit 4
  </select>

  <select id="selectCommentCustomById" parameterType="int" resultMap="CommentCustomResult">
    select
    <include refid="Base_Column_List"></include>
    ,a.article_id,a.article_title
    from comment c,article a
    where c.comment_id=6
    and c.comment_article_id=a.article_id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="comment_id" keyProperty="commentId" parameterType="com.lk.pojo.Comment" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into comment (comment_pid, comment_pname, comment_article_id, 
      comment_author_name, comment_author_email, 
      comment_author_url, comment_content, comment_agent, 
      comment_ip, comment_create_time, comment_role, 
      comment_status)
    values (#{commentPid,jdbcType=INTEGER}, #{commentPname,jdbcType=VARCHAR}, #{commentArticleId,jdbcType=INTEGER}, 
      #{commentAuthorName,jdbcType=VARCHAR}, #{commentAuthorEmail,jdbcType=VARCHAR}, 
      #{commentAuthorUrl,jdbcType=VARCHAR}, #{commentContent,jdbcType=VARCHAR}, #{commentAgent,jdbcType=VARCHAR}, 
      #{commentIp,jdbcType=VARCHAR}, #{commentCreateTime,jdbcType=TIMESTAMP}, #{commentRole,jdbcType=INTEGER}, 
      #{commentStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="comment_id" keyProperty="commentId" parameterType="com.lk.pojo.Comment" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentPid != null">
        comment_pid,
      </if>
      <if test="commentPname != null">
        comment_pname,
      </if>
      <if test="commentArticleId != null">
        comment_article_id,
      </if>
      <if test="commentAuthorName != null">
        comment_author_name,
      </if>
      <if test="commentAuthorEmail != null">
        comment_author_email,
      </if>
      <if test="commentAuthorUrl != null">
        comment_author_url,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="commentAgent != null">
        comment_agent,
      </if>
      <if test="commentIp != null">
        comment_ip,
      </if>
      <if test="commentCreateTime != null">
        comment_create_time,
      </if>
      <if test="commentRole != null">
        comment_role,
      </if>
      <if test="commentStatus != null">
        comment_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentPid != null">
        #{commentPid,jdbcType=INTEGER},
      </if>
      <if test="commentPname != null">
        #{commentPname,jdbcType=VARCHAR},
      </if>
      <if test="commentArticleId != null">
        #{commentArticleId,jdbcType=INTEGER},
      </if>
      <if test="commentAuthorName != null">
        #{commentAuthorName,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorEmail != null">
        #{commentAuthorEmail,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorUrl != null">
        #{commentAuthorUrl,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentAgent != null">
        #{commentAgent,jdbcType=VARCHAR},
      </if>
      <if test="commentIp != null">
        #{commentIp,jdbcType=VARCHAR},
      </if>
      <if test="commentCreateTime != null">
        #{commentCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentRole != null">
        #{commentRole,jdbcType=INTEGER},
      </if>
      <if test="commentStatus != null">
        #{commentStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lk.pojo.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comment
    <set>
      <if test="commentPid != null">
        comment_pid = #{commentPid,jdbcType=INTEGER},
      </if>
      <if test="commentPname != null">
        comment_pname = #{commentPname,jdbcType=VARCHAR},
      </if>
      <if test="commentArticleId != null">
        comment_article_id = #{commentArticleId,jdbcType=INTEGER},
      </if>
      <if test="commentAuthorName != null">
        comment_author_name = #{commentAuthorName,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorEmail != null">
        comment_author_email = #{commentAuthorEmail,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorUrl != null">
        comment_author_url = #{commentAuthorUrl,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentAgent != null">
        comment_agent = #{commentAgent,jdbcType=VARCHAR},
      </if>
      <if test="commentIp != null">
        comment_ip = #{commentIp,jdbcType=VARCHAR},
      </if>
      <if test="commentCreateTime != null">
        comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentRole != null">
        comment_role = #{commentRole,jdbcType=INTEGER},
      </if>
      <if test="commentStatus != null">
        comment_status = #{commentStatus,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lk.pojo.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comment
    set comment_pid = #{commentPid,jdbcType=INTEGER},
      comment_pname = #{commentPname,jdbcType=VARCHAR},
      comment_article_id = #{commentArticleId,jdbcType=INTEGER},
      comment_author_name = #{commentAuthorName,jdbcType=VARCHAR},
      comment_author_email = #{commentAuthorEmail,jdbcType=VARCHAR},
      comment_author_url = #{commentAuthorUrl,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_agent = #{commentAgent,jdbcType=VARCHAR},
      comment_ip = #{commentIp,jdbcType=VARCHAR},
      comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
      comment_role = #{commentRole,jdbcType=INTEGER},
      comment_status = #{commentStatus,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>